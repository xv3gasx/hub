-- (Mevcut scriptin tamamı buraya gelecek, hiçbir şeyi değiştirmiyoruz)

-- (Mevcut scriptin sonu)

-- -------------------------
-- Advanced Aim System entegrasyonu (ekleme)
-- -------------------------

-- Config
local AimConfig = {
    Murderer = false,
    Sheriff = false,
    FOV = 150
}

-- FOV Circle
local Camera = workspace.CurrentCamera
local LocalPlayer = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local fovCircle = Drawing.new("Circle")
fovCircle.Thickness = 2
fovCircle.NumSides = 64
fovCircle.Radius = AimConfig.FOV
fovCircle.Filled = false
fovCircle.Color = Color3.fromRGB(255, 50, 50)
fovCircle.Visible = false

RunService.RenderStepped:Connect(function()
    fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
end)

-- Wall check
local function isVisible(targetPart)
    local origin = Camera.CFrame.Position
    local direction = (targetPart.Position - origin)
    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {LocalPlayer.Character}
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist

    local rayResult = workspace:Raycast(origin, direction, rayParams)
    if not rayResult then return true end
    return rayResult.Instance:IsDescendantOf(targetPart.Parent)
end

-- Get closest
local function getClosest(roleName)
    local closest, minDist = nil, math.huge
    for _, p in pairs(game:GetService("Players"):GetPlayers()) do
        if p ~= LocalPlayer and detectRole(p) == roleName then
            local char = p.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            local hum = char and char:FindFirstChildOfClass("Humanoid")
            if hrp and hum and hum.Health > 0 and isVisible(hrp) then
                local pos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    local dist = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)).Magnitude
                    if dist < AimConfig.FOV and dist < minDist then
                        minDist = dist
                        closest = hrp
                    end
                end
            end
        end
    end
    return closest
end

-- Aim toggles entegre edilmiş Main_Tab içine
Main_Tab:Toggle({
    Title = "Aim at Murderer",
    Default = false,
    Callback = function(state)
        if state and AimConfig.Sheriff then
            WindUI:Notify({
                Title = "Warning",
                Content = "If you enabled Aim at Sheriff, please disable it to avoid bugs",
                Duration = 4,
                Icon = "alert-circle"
            })
        end
        AimConfig.Murderer = state
        if state then AimConfig.Sheriff = false end
        fovCircle.Visible = (AimConfig.Murderer or AimConfig.Sheriff)
    end
})

Main_Tab:Toggle({
    Title = "Aim at Sheriff",
    Default = false,
    Callback = function(state)
        if state and AimConfig.Murderer then
            WindUI:Notify({
                Title = "Warning",
                Content = "If you enabled Aim at Murderer, please disable it to avoid bugs",
                Duration = 4,
                Icon = "alert-circle"
            })
        end
        AimConfig.Sheriff = state
        if state then AimConfig.Murderer = false end
        fovCircle.Visible = (AimConfig.Murderer or AimConfig.Sheriff)
    end
})

-- Aim loop
RunService.RenderStepped:Connect(function()
    if not (AimConfig.Murderer or AimConfig.Sheriff) then 
        fovCircle.Visible = false 
        return 
    end

    fovCircle.Visible = true
    local char = LocalPlayer.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local target
    if AimConfig.Murderer then
        target = getClosest("Murderer")
    elseif AimConfig.Sheriff then
        target = getClosest("Sheriff")
    end

    if target then
        local newCFrame = CFrame.new(Camera.CFrame.Position, target.Position)
        Camera.CFrame = Camera.CFrame:Lerp(newCFrame, 0.22)
        hrp.CFrame = CFrame.new(hrp.Position, target.Position)
    end
end)